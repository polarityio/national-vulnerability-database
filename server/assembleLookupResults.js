const { flow, get, size, find, eq, map, some } = require('lodash/fp');

const assembleLookupResults = (entities, vulnerabilities, options) =>
  map((entity) => {
    const resultsForThisEntity = getResultsForThisEntity(
      entity,
      vulnerabilities,
      options
    );

    const resultsFound = some(
      (resultField) => size(resultField) || resultField === true,
      resultsForThisEntity
    );

    const lookupResult = {
      entity,
      data: resultsFound
        ? {
            summary: createSummaryTags(resultsForThisEntity, options),
            details: resultsForThisEntity
          }
        : null
    };

    return lookupResult;
  }, entities);

const getResultForThisEntity = (entity, results) =>
  flow(find(flow(get('entity.value'), eq(entity.value))), get('result'))(results);

const getResultsForThisEntity = (entity, vulnerabilities, options) => ({
  vulnerabilities: getResultForThisEntity(entity, vulnerabilities)
});

const createSummaryTags = ({ vulnerabilities }, options) =>
  [].concat(size(vulnerabilities) ? `Vulns Found: ${size(vulnerabilities)}` : []);

module.exports = assembleLookupResults;
